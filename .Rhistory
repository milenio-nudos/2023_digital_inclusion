sub_missing(
columns = everything(),
missing_text = "") %>%
tab_spanner(label="M or %",columns = starts_with("M_Prop"))%>%
tab_spanner(label="SD",columns = starts_with("SD_"))%>%
tab_spanner(label="N",columns = starts_with("N_"))%>%
tab_spanner(label="Cronbach's Alpha",columns = starts_with("Cronbach"))%>%
cols_label(ends_with("15")~"2015",
ends_with("23")~"2023")
#| label: tbl-descriptive
#| tbl-cap: Descriptive statistics
rbind(
data.frame(Variable="Gender (Women)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$sex)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$sex)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(sex)),
N_2023=nrow(beyond_2023%>%drop_na(sex)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Age",
Categories=NA,
M_Prop_2015=mean(beyond_2015$age,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$age,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$age,na.rm=T),
SD_2023=sd(beyond_2023$age,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(age)),
N_2023=nrow(beyond_2023%>%drop_na(age)),
Cronbach_2015=NA,
Cronbach_2023=NA),
data.frame(Variable="Innovative personality (1-4)",
Categories=NA,
M_Prop_2015=mean(beyond_2015$innovative,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$innovative,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$innovative,na.rm=T),
SD_2023=sd(beyond_2023$innovative,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(innovative)),
N_2023=nrow(beyond_2023%>%drop_na(innovative)),
Cronbach_2015=alpha_2015_innovative$alpha,
Cronbach_2023=alpha_2023_innovative$alpha),
inner_join(count(beyond_2015,education),
count(beyond_2023,education),
by="education")%>%drop_na() %>% rename(n_2015=n.x,n_2023=n.y)%>%
mutate(education=to_label(education),
Variable="Level of education",
N_2015=c(nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education))),
N_2023=c(nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education))),
SD_2015=NA,
SD_2023=NA,
Cronbach_2015=NA,
Cronbach_2023=NA,
M_Prop_2015=n_2015/N_2015,
M_Prop_2023=n_2023/N_2023) %>%
rename(Categories=education)%>%
dplyr::select(Variable,Categories,M_Prop_2015,M_Prop_2023,
SD_2015,SD_2023,N_2015,N_2023,Cronbach_2015,Cronbach_2023)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
inner_join(count(beyond_2015,transport),
rbind(as.list(c(transport=1,n=0)),
count(beyond_2023,transport)),
by="transport")%>%drop_na()%>% rename(n_2015=n.x,n_2023=n.y)%>%
mutate(transport=to_label(transport),
Variable="Transport connectivity (frequency of public transportation)",
N_2015=c(nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport))),
N_2023=c(nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport))),
SD_2015=NA,
SD_2023=NA,
Cronbach_2015=NA,
Cronbach_2023=NA,
M_Prop_2015=n_2015/N_2015,
M_Prop_2023=n_2023/N_2023) %>%
rename(Categories=transport)%>%
dplyr::select(Variable,Categories,M_Prop_2015,M_Prop_2023,SD_2015,SD_2023,
N_2015,N_2023,Cronbach_2015,Cronbach_2023)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Number of children in the household",
Categories=NA,
M_Prop_2015=mean(beyond_2015$childs,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$childs,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$childs,na.rm=T),
SD_2023=sd(beyond_2023$childs,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(childs)),
N_2023=nrow(beyond_2023%>%drop_na(childs)),
Cronbach_2015=NA,
Cronbach_2023=NA),
data.frame(Variable="Household Internet connection (Yes)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$adoption)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$adoption)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(adoption)),
N_2023=nrow(beyond_2023%>%drop_na(adoption)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Lifetime Internet User (Yes)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$user)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$user)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(user)),
N_2023=nrow(beyond_2023%>%drop_na(user)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%"))
) %>%
gt(groupname_col = "Variable") %>%
tab_header(title = "Descriptive statistics") %>%
sub_missing(
columns = everything(),
missing_text = "") %>%
tab_spanner(label="M or %",columns = starts_with("M_Prop"))%>%
tab_spanner(label="SD",columns = starts_with("SD_"))%>%
tab_spanner(label="N",columns = starts_with("N_"))%>%
tab_spanner(label="Cronbach's Alpha",columns = starts_with("Cronbach"))%>%
cols_label(ends_with("15")~"2015",
ends_with("23")~"2023")
#0. Preparation ----
# Load packages
pacman::p_load(haven, #Read sav database
tidyverse, #Data manipulation
janitor, #Clean columns
sjlabelled, #Labels manipulation
ltm, #Cronbach alpha
summarytools, #Descriptive tables
gt, #Tables
sjPlot,
labelled
)
options(digits = 1) #round results to 2 digits
# Read
raw_2015 <- read_sav("input/2015_survey_raw.sav") %>% clean_names()
raw_2023 <- read_sav("input/2023_survey_raw.sav") %>% clean_names()
#Recode 2015 communities
raw_2015$comuna <- add_labels(raw_2015$comuna, labels = c(`LA TIRANA` = 23))
raw_2015$comuna <- add_labels(raw_2015$comuna, labels = c(`LA POBLACIÓN` = 9))
#To upper 2023 zones labels
raw_2023 <- raw_2023 %>% mutate(zona_rural=toupper(to_label(zona_rural)))
# Filter zones measured in both studies
raw_2023 <- raw_2023 %>% filter(tipo_zona==2)
comunas_2023<-get_labels(raw_2023$zona_rural)
raw_2015 <- raw_2015 %>% filter(to_label(comuna)%in%comunas_2023)
# 99 to NA
raw_2015[raw_2015==99]<-NA
raw_2023[raw_2023==99]<-NA
#| label: tbl-communities
#| tbl-cap: Total cases by rural community
inner_join(
count(to_label(raw_2015),comuna) %>% rename(Comuna=comuna),
count(to_label(raw_2023),zona_rural) %>% rename(Comuna=zona_rural),
by="Comuna") %>% rename(N_2015=n.x,N_2023=n.y) %>%
rbind(.,as.list(c(Comuna="TOTAL",N_2015=sum(.$N_2015),N_2023=sum(.$N_2023))))%>%
gt()%>%
tab_spanner(label = "N por año", columns = c(N_2015,N_2023))%>%
cols_label(N_2015="2015",
N_2023="2023")
#1. Construction of database ----
## Home Income (only 2023)
ingresos <- raw_2023%>%dplyr::select(starts_with("g3_")) %>% mutate_all(as.integer)
raw_2023$ingresos <- coalesce(ingresos$g3_1,ingresos$g3_2,ingresos$g3_3,
ingresos$g3_4,ingresos$g3_5,ingresos$g3_6,
ingresos$g3_7,ingresos$g3_8,ingresos$g3_9,
ingresos$g3_10)
## Innovative personality both
innovative_variables_2015 <- raw_2015 %>% dplyr::select(p046_01, p046_02, p046_03)
raw_2015$innovative <- innovative_variables_2015 %>% mutate_all(as.integer)%>%
rowMeans(na.rm=T)
innovative_variables_2023 <- raw_2023 %>% dplyr::select(starts_with("f2_"))
raw_2023$innovative <- innovative_variables_2023 %>% mutate_all(as.integer)%>%
rowMeans(na.rm=T)
alpha_2015_innovative<-cronbach.alpha(innovative_variables_2015%>%drop_na()) #Save alpha
alpha_2023_innovative<-cronbach.alpha(innovative_variables_2023%>%drop_na()) #Save alpha
#Social networks
raw_2015$soc_net <- raw_2015%>%dplyr::select(starts_with("p047_"))%>%
mutate_all(as.integer)%>%
mutate(across(everything(),~case_when(.==2~0,
.==1~1,
TRUE ~ NA_real_)))%>%
rowSums(na.rm=T)
raw_2023$soc_net <- raw_2023%>%dplyr::select(starts_with("f6_"))%>%
mutate_all(as.integer)%>%
mutate(across(everything(),~case_when(.==2~0,
.==1~1,
TRUE~NA_real_)))%>%
rowSums(na.rm=T)
#Get childs in the house
raw_2015$childs <- raw_2015 %>% dplyr::select(starts_with("p061_"))%>%
mutate_all(~case_when(.<=18~1,.>18~0,
TRUE~NA_real_))%>%
rowSums(.,na.rm = T)%>%as.numeric()
raw_2023$childs <- raw_2023 %>% dplyr::select(starts_with("edad")) %>%
mutate_all(~case_when(.<=18~1,.>18~0,TRUE~NA_real_)) %>%
rowSums(.,na.rm = T)%>%as.numeric()
#Dichotomize user of internet (only 2023)
raw_2015 <- raw_2015 %>% mutate(p018=ifelse(p018==2,0,p018))
raw_2023 <- raw_2023 %>% mutate(b6=ifelse(b6==2,0,b6))
#Dichotomize house net adoption
raw_2015 <- raw_2015 %>% mutate(p004=ifelse(p004==2,0,p004))
raw_2023 <- raw_2023 %>% mutate(b2=ifelse(b2==2,0,b2))
#Dichotomize women
raw_2015 <- raw_2015 %>% mutate(sexo=ifelse(sexo==2,1,0))
raw_2023 <- raw_2023 %>% mutate(a1=ifelse(a1==2,1,0))
#Manipulate education levels and factors
raw_2015 <- raw_2015 %>% mutate(p069 = case_when(p069 == 7 ~ 6,
TRUE ~ p069))
val_labels(raw_2015$p069) <- c("Incomplete primary"= 1,
"Complete primary"=2,
"Incomplete high school"=3,
"Complete high school"=4,
"Incomplete college"=5,
"College education"=6)
raw_2023 <- raw_2023 %>% mutate(g7 = case_when(g7 %in% c(1,2) ~ 1,
g7 == 3 ~ 2,
g7 == 4 ~ 3,
g7 == 5 ~ 4,
g7 %in% c(6,8) ~ 5,
g7 %in% c(7,9,10) ~ 6,
TRUE ~ g7))
val_labels(raw_2023$g7) <- c("Incomplete primary"= 1,
"Complete primary"=2,
"Incomplete high school"=3,
"Complete high school"=4,
"Incomplete college"=5,
"College education"=6)
#Manipulate transport factors
val_labels(raw_2015$p053) <- c("No public transportation"= 1,
"Once a week or less"=2,
"Two to three times a week"=3,
"Once a day"=4,
"Only mornings and afternoon"=5,
"Several times a day"=6)
val_labels(raw_2023$f14) <- c("No public transportation"= 1,
"Once a week or less"=2,
"Two to three times a week"=3,
"Once a day"=4,
"Only mornings and afternoon"=5,
"Several times a day"=6)
# Seleccionar variables
beyond_2015 <- raw_2015 %>% dplyr::select(
age=edad, #Age
education=p069, #Education personal
sex=sexo, #Gender
income=p075, #Income
innovative, #Innovative
transport=p053, #Transport frequency
user=p018, #Internet user
soc_net, #Social Network
adoption=p004, #Internet house adoption
childs) #Childs in the house
beyond_2023 <- raw_2023 %>% dplyr::select(
age=a2, #Age
education=g7, #Education personal
sex=a1, #Gender
income=ingresos, #Income
innovative, #Innovative
transport=f14, #Transport frequency
user=b6, #Internet user
soc_net, #Social Network
adoption=b2, #Internet house adoption
childs) #Childs in the house
#| label: tbl-descriptive
#| tbl-cap: Descriptive statistics
rbind(
data.frame(Variable="Gender (Women)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$sex)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$sex)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(sex)),
N_2023=nrow(beyond_2023%>%drop_na(sex)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Age",
Categories=NA,
M_Prop_2015=mean(beyond_2015$age,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$age,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$age,na.rm=T),
SD_2023=sd(beyond_2023$age,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(age)),
N_2023=nrow(beyond_2023%>%drop_na(age)),
Cronbach_2015=NA,
Cronbach_2023=NA),
data.frame(Variable="Innovative personality (1-4)",
Categories=NA,
M_Prop_2015=mean(beyond_2015$innovative,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$innovative,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$innovative,na.rm=T),
SD_2023=sd(beyond_2023$innovative,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(innovative)),
N_2023=nrow(beyond_2023%>%drop_na(innovative)),
Cronbach_2015=alpha_2015_innovative$alpha,
Cronbach_2023=alpha_2023_innovative$alpha),
inner_join(count(beyond_2015,education),
count(beyond_2023,education),
by="education")%>%drop_na() %>% rename(n_2015=n.x,n_2023=n.y)%>%
mutate(education=to_label(education),
Variable="Level of education",
N_2015=c(nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education)),
nrow(beyond_2015%>%drop_na(education))),
N_2023=c(nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education)),
nrow(beyond_2023%>%drop_na(education))),
SD_2015=NA,
SD_2023=NA,
Cronbach_2015=NA,
Cronbach_2023=NA,
M_Prop_2015=n_2015/N_2015,
M_Prop_2023=n_2023/N_2023) %>%
rename(Categories=education)%>%
dplyr::select(Variable,Categories,M_Prop_2015,M_Prop_2023,
SD_2015,SD_2023,N_2015,N_2023,Cronbach_2015,Cronbach_2023)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
inner_join(count(beyond_2015,transport),
rbind(as.list(c(transport=1,n=0)),
count(beyond_2023,transport)),
by="transport")%>%drop_na()%>% rename(n_2015=n.x,n_2023=n.y)%>%
mutate(transport=to_label(transport),
Variable="Transport connectivity (frequency of public transportation)",
N_2015=c(nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport)),
nrow(beyond_2015%>%drop_na(transport))),
N_2023=c(nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport)),
nrow(beyond_2023%>%drop_na(transport))),
SD_2015=NA,
SD_2023=NA,
Cronbach_2015=NA,
Cronbach_2023=NA,
M_Prop_2015=n_2015/N_2015,
M_Prop_2023=n_2023/N_2023) %>%
rename(Categories=transport)%>%
dplyr::select(Variable,Categories,M_Prop_2015,M_Prop_2023,SD_2015,SD_2023,
N_2015,N_2023,Cronbach_2015,Cronbach_2023)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Number of children in the household",
Categories=NA,
M_Prop_2015=mean(beyond_2015$childs,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$childs,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$childs,na.rm=T),
SD_2023=sd(beyond_2023$childs,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(childs)),
N_2023=nrow(beyond_2023%>%drop_na(childs)),
Cronbach_2015=NA,
Cronbach_2023=NA),
data.frame(Variable="Social Network (0-13)",
Categories=NA,
M_Prop_2015=mean(beyond_2015$soc_net,na.rm=T)%>%round(2),
M_Prop_2023=mean(beyond_2023$soc_net,na.rm=T)%>%round(2),
SD_2015=sd(beyond_2015$soc_net,na.rm=T),
SD_2023=sd(beyond_2023$soc_net,na.rm=T),
N_2015=nrow(beyond_2015%>%drop_na(soc_net)),
N_2023=nrow(beyond_2023%>%drop_na(soc_net)),
Cronbach_2015=NA,
Cronbach_2023=NA),
data.frame(Variable="Household Internet connection (Yes)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$adoption)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$adoption)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(adoption)),
N_2023=nrow(beyond_2023%>%drop_na(adoption)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%")),
data.frame(Variable="Lifetime Internet User (Yes)",
Categories=NA,
M_Prop_2015=sum(beyond_2015$user)/nrow(beyond_2015),
M_Prop_2023=sum(beyond_2023$user)/nrow(beyond_2023),
SD_2015=NA,
SD_2023=NA,
N_2015=nrow(beyond_2015%>%drop_na(user)),
N_2023=nrow(beyond_2023%>%drop_na(user)),
Cronbach_2015=NA,
Cronbach_2023=NA)%>%
mutate(M_Prop_2015=paste0(round(M_Prop_2015,2),"%"),
M_Prop_2023=paste0(round(M_Prop_2023,2),"%"))
) %>%
gt(groupname_col = "Variable") %>%
tab_header(title = "Descriptive statistics") %>%
sub_missing(
columns = everything(),
missing_text = "") %>%
tab_spanner(label="M or %",columns = starts_with("M_Prop"))%>%
tab_spanner(label="SD",columns = starts_with("SD_"))%>%
tab_spanner(label="N",columns = starts_with("N_"))%>%
tab_spanner(label="Cronbach's Alpha",columns = starts_with("Cronbach"))%>%
cols_label(ends_with("15")~"2015",
ends_with("23")~"2023")
glm_2015 <- glm(adoption~age+sex+innovative+education+income+transport+soc_net+childs,
data = beyond_2015%>%mutate_all(as.numeric),family = "binomial")
glm_2023 <- glm(adoption~age+sex+innovative+education+income+transport+soc_net+childs,
data = beyond_2023%>%mutate_all(as.numeric),family = "binomial")
texreg::htmlreg(l=list(glm_2015,glm_2023),
custom.coef.names=c("Intercept",
#Personal factors
"Age (Continous)",
"Sex (1=Woman)",
"Innovative personality (1-4)",
#Positional factors
"Level of education (1-6)",
#Material resources
"House income (1-8)/(1-7)",
"Transport conectivity (1-6)",
#Social resources
"Social network (1-13)",
"Childrens in the house (1-5)"
),
custom.model.names = c("2015","2023"))
View(innovative_variables_2015)
View(beyond_2023)
View(glm_2015)
View(glm_2023)
View(innovative_variables_2015)
unique(innovative_variables_2015$p046_01)
innovative_variables_2023$f2_2
innovative_variables_2015$p046_01
innovative_variables_2015$p046_02
innovative_variables_2015$p046_03
innovative_variables_2023$f2_1
innovative_variables_2023$f2_2
innovative_variables_2023$f2_3
innovative_variables_2023$f2_1
innovative_variables_2023$f2_3
innovative_variables_2023$f2_2
# 1. Obtener base 2023 comparable
data_2023 <- read_sav("input/raw_data/2023_survey_raw.sav")
pacman::p_load(haven, # read_sav
psych, # Cronbach
readxl, # read_xlsx
tidyverse, # Data manipulation
janitor, # clean_names
sjPlot, # view_df
sjlabelled,
labelled,
tidyverse,
ggplot2,
hrbrthemes,
scalesextra,
knitr,
gt
)
# 1. Obtener base 2023 comparable
data_2023 <- read_sav("input/raw_data/2023_survey_raw.sav")
data_2023 <- read_sav("01_input/raw_data/2023_survey_raw.sav")
data_2023 <- read_sav("./01_input/raw_data/2023_survey_raw.sav")
data_2023 <- read_sav(".../01_input/raw_data/2023_survey_raw.sav")
data_2023 <- read_sav("../01_input/raw_data/2023_survey_raw.sav")
data_2023 <- read_sav("../01_input/01_raw_data/2023_survey_raw.sav")
data_2023 <- read_sav("./01_input/01_raw_data/2023_survey_raw.sav")
# 1. Obtener base 2023 comparable
data_2023 <- read_sav("../01_input/01_raw_data/2023_survey_raw.sav")
comparable_2023 <- readxl::read_xlsx("../01_input/input/final_survey.xlsx") %>% filter(comparability_2015==1)
comparable_2023 <- readxl::read_xlsx("../01_input/01_raw_data/final_survey.xlsx") %>% filter(comparability_2015==1)
comparable_2023 <- readxl::read_xlsx("../01_input/01_raw_data/codebook.xlsx") %>% filter(comparability_2015==1)
# 1. Obtener base 2023 comparable
data_2023 <- read_sav("../01_input/01_raw_data/2023_survey_raw.sav")
comparable_2023 <- readxl::read_xlsx("../01_input/01_raw_data/codebook.xlsx") %>% filter(comparability_2015==1)
# 1. Obtener base 2023 comparable
data_2023 <- read_sav("../01_input/01_raw_data/2023_survey_raw.sav")
comparable_2023 <- readxl::read_xlsx("../01_input/01_raw_data/codebook.xlsx") %>% filter(comparability_2015==1)
comparable_2023 <- readxl::read_xlsx("../01_input/04_codebook/codebook.xlsx") %>% filter(comparability_2015==1)
data_2015 <- read_sav("../01_input/01_raw_data/2015_survey_raw.sav") %>% clean_names()
